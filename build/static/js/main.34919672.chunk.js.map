{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","root","Width","maxWidth","backgroundColor","color","bullet","display","margin","transform","pos","fontSize","textAlign","overflowWrap","textAlignLast","rootHead","typography","button","paper","padding","width","modal","alignItems","justifyContent","paperModal","boxShadow","shadows","spacing","Todo","props","useState","input","setInput","classes","bull","className","React","open","setOpen","handleClose","time","todo","timestamp","Date","toDate","toUTCString","GridListTile","style","Card","variant","CardContent","Typography","CardActions","float","component","fontWeight","lineHeight","slice","Button","onClick","event","collection","doc","id","delete","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","FormControl","InputLabel","Input","type","required","value","placeholder","autoFocus","onChange","e","target","multiline","fullWidth","disabled","preventDefault","set","merge","updateTodo","App","todos","setTodo","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","autoComplete","add","FieldValue","serverTimestamp","marginTop","GridList","cellHeight","cols","flexWrap","overflow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34919672.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyBeEZUalFU957LYBdgyuF-fyPZH6n0o-nY\",\r\n  authDomain: \"todolist-react-cp.firebaseapp.com\",\r\n  projectId: \"todolist-react-cp\",\r\n  storageBucket: \"todolist-react-cp.appspot.com\",\r\n  messagingSenderId: \"207279896601\",\r\n  appId: \"1:207279896601:web:a3a28ed6c31dd189859288\",\r\n  measurementId: \"G-1K5T4R0FJE\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import React, { useState } from \"react\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport \"./Todo.css\";\r\nimport db from \"./firebase.js\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  GridListTile,\r\n  Input,\r\n  InputLabel,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    Width: 300,\r\n    maxWidth: 300,\r\n    backgroundColor: \"#3a3a81\",\r\n    color: \"#fff\",\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n    color: \"#fff\",\r\n  },\r\n  pos: {\r\n    color: \"lightgrey\",\r\n    fontSize: 30,\r\n    maxWidth: 300,\r\n    textAlign: 'start',\r\n    overflowWrap: 'anywhere',\r\n    textAlignLast: 'auto'\r\n  },\r\n  rootHead: {\r\n    ...theme.typography.button,\r\n    backgroundColor: \"#3a3a81\",\r\n    color: \"#fff\",\r\n  },\r\n  paper: {\r\n    padding: 3,\r\n    overflowWrap: \"anywhere\",\r\n    width: 300,\r\n    backgroundColor: \"lightgrey\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paperModal: {\r\n    backgroundColor: 'lightgrey',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction Todo(props) {\r\n  const [input, setInput] = useState(\"\");\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>â€¢</span>;\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  // const Fade = React.forwardRef(function Fade(props, ref) {\r\n  //   const { in: open, children, onEnter, onExited, ...other } = props;\r\n  //   const style = useSpring({\r\n  //     from: { opacity: 0 },\r\n  //     to: { opacity: open ? 1 : 0 },\r\n  //     onStart: () => {\r\n  //       if (open && onEnter) {\r\n  //         onEnter();\r\n  //       }\r\n  //     },\r\n  //     onRest: () => {\r\n  //       if (!open && onExited) {\r\n  //         onExited();\r\n  //       }\r\n  //     },\r\n  //   });\r\n\r\n  //   return (\r\n  //     <animated.div  style={style} {...other}>\r\n  //       {children}\r\n  //     </animated.div>\r\n  //   );\r\n  // });\r\n\r\n  // Fade.propTypes = {\r\n  //   children: PropTypes.element,\r\n  //   in: PropTypes.bool.isRequired,\r\n  //   onEnter: PropTypes.func,\r\n  //   onExited: PropTypes.func,\r\n  // };\r\n\r\n  function updateTodo(e){\r\n    e.preventDefault();\r\n    db.collection(\"todos\").doc(props.todo.id).set(\r\n      {\r\n        todo: input,\r\n      },\r\n      { merge: true }\r\n    );\r\n    handleClose()\r\n  };\r\n  let time = props.todo.timestamp? new Date(props.todo.timestamp.toDate()).toUTCString():\"deadline\";\r\n  // console.log(time.slice(0,22));\r\n  return (\r\n    <>\r\n      <GridListTile style={{ margin: 8 }}>\r\n        <Card className={classes.root} variant=\"outlined\">\r\n          <CardContent>\r\n            <div className={classes.rootHead}>\r\n              Task{bull}of{bull}the{bull}Day\r\n            </div>\r\n           <Typography className={classes.pos} color=\"textSecondary\">\r\n              {props.todo.todo}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions style={{ float: \"right\", color: \"whitesmoke\" }}>\r\n            <Typography\r\n              variant=\"body2\"\r\n              component=\"p\"\r\n              style={{\r\n                fontWeight: 800,\r\n                lineHeight: 1.43,\r\n                color: \"#00000070\",\r\n                fontSize: \"medium\",\r\n              }}\r\n            >\r\n              {time.slice(0,22)}\r\n            </Typography>\r\n            <Button onClick={handleOpen} style={{ color: \"whitesmoke\" }}>\r\n              <EditIcon />\r\n            </Button>\r\n            <Button\r\n              onClick={(event) =>\r\n                db.collection(\"todos\").doc(props.todo.id).delete()\r\n              }\r\n              style={{ color: \"whitesmoke\" }}\r\n            >\r\n              <DeleteForeverIcon />\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </GridListTile>\r\n      <Modal\r\n        aria-labelledby=\"spring-modal-title\"\r\n        aria-describedby=\"spring-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paperModal}>\r\n            <h2 id=\"spring-modal-title\">Update the task</h2>\r\n            <form >\r\n              <FormControl>\r\n                <InputLabel style={{ fontSize: 18 }}>\r\n                  <EditIcon style={{ fontSize: 17 }} /> update\r\n                </InputLabel>\r\n                <Input\r\n                  id=\"outlined-basic\"\r\n                  variant=\"outlined\"\r\n                  type=\"text\"\r\n                  required={true}\r\n                  value={input}\r\n                  style={{ color: \"black\" }}\r\n                  placeholder={props.todo.todo}\r\n                  autoFocus={true}\r\n                  onChange={(e) => setInput(e.target.value)}\r\n                  multiline={true}\r\n                  fullWidth\r\n                />\r\n              </FormControl>\r\n              <Button style={{ float: \"right\", color:\"black\" }}\r\n                disabled={!input}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                onClick={(e) => updateTodo(e)}\r\n              >\r\n                <SaveIcon />\r\n                update\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  FormControl,\n  GridList,\n  Input,\n  InputLabel,\n} from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Todo from \"./Todo\";\nimport db from \"./firebase.js\";\nimport firebase from \"firebase\";\nimport \"./App.css\";\n\nfunction App() {\n  const [todos, setTodo] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    db.collection(\"todos\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setTodo(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            todo: doc.data().todo,\n            timestamp: doc.data().timestamp,\n          }))\n        );\n      });\n  }, []);\n\n  function addTodo(e) {\n    e.preventDefault();\n    db.collection(\"todos\").add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 style={{ color: \"white\" }}>TODO APP</h1>\n      <div className=\"container\">\n        <form>\n          <FormControl>\n            <InputLabel style={{ fontSize: 18 }}>\n              <EditIcon style={{ fontSize: 17 }} /> Write a Todo\n            </InputLabel>\n            <Input\n              id=\"outlined-basic\"\n              variant=\"outlined\"\n              type=\"text\"\n              required={true}\n              value={input}\n              autoFocus={true}\n              autoComplete='off'\n              style={{ color: \"white\" }}\n              onChange={(e) => setInput(e.target.value)}\n            />\n          </FormControl>\n          <Button\n            disabled={!input}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            onClick={addTodo}\n          >\n            ADD\n          </Button>\n        </form>\n      </div>\n      <div className=\"container\" style={{ marginTop: 20 }}>\n        <GridList\n          cellHeight={\"auto\"}\n          cols={4}\n          style={{ display: \"flex\", flexWrap: \"wrap\", overflow: \"hidden\",textAlignLast: 'justify', margin: 14 }}\n        >\n          {todos !== null &&\n            todos.map((todo) => {\n              return <Todo todo={todo} key={todo.id} />;\n            })}\n        </GridList>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}